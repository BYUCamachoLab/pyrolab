# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

from datetime import datetime

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('.'))
sys.path.insert(0, os.path.abspath('../src'))


# -- Project information -----------------------------------------------------

project = 'PyroLab'
copyright = f"2020-{datetime.now().year}, Sequoia Ploeg"
author = 'Sequoia Ploeg'

# The full version, including alpha/beta/rc tags
release = '0.2.1'

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
language = "en"


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "numpydoc",
    # "sphinx.ext.intersphinx",
    # "sphinx.ext.coverage",
    # "sphinx.ext.doctest",
    "sphinx.ext.autosummary",
    "sphinx.ext.autodoc.typehints",
    "sphinx.ext.viewcode",
    # "sphinx.ext.graphviz",
    # "sphinx.ext.ifconfig",
    # 'IPython.sphinxext.ipython_console_highlighting',
    # 'IPython.sphinxext.ipython_directive',
    # "sphinx.ext.imgmath",
    "sphinx.ext.todo",
    "sphinx.ext.mathjax",
    # 'sphinx.ext.viewcode', #
    # "sphinxext.rediraffe",
    # 'sphinx.ext.githubpages', #
    "sphinx_design",
    "sphinx_copybutton",
    # "matplotlib.sphinxext.mathmpl",
    # "matplotlib.sphinxext.plot_directive",
    # "myst_nb",
    "sphinx_togglebutton",
    # "sphinxcontrib.bibtex",
]

autosummary_generate = True  # Turn on sphinx.ext.autosummary
autodoc_typehints = "none"
autoclass_content = "class"  # Add __init__ doc (ie. params) to class summaries
# html_show_sourcelink = False  # Remove 'view source code' from top of page (for html, not python)
autodoc_inherit_docstrings = True  # If no docstring, inherit from base class
# add_module_names = False # Remove namespaces from class/method signatures

# Do not mock numpy, scipy, Pyro5! Build will fail.
autodoc_mock_imports = [
    'appnope',
    'deprecation',
    'typer',
    'colorama',
    'tabulate', 
    'serial',
    'thorlabs_kinesis',
    'pyfirmata',
    'sacher_tec',
    'pyvisa',
    'pyfirmata',
    'cv2',
]

# -- MyST-NB settings --------------------------------------------------------
# https://myst-nb.readthedocs.io/en/latest/configuration.html#execution
# source_suffix = {
#     '.rst': 'restructuredtext',
#     '.ipynb': 'myst-nb',
#     '.myst': 'myst-nb',
#     # '.md': 'markdown',
# }
# nb_execution_mode = "cache"
# nb_execution_excludepatterns = [
#     'cpn_fixer.ipynb',
#     'eo_fixer.ipynb',
# ]

# -- Matplotlib plot directive -----------------------------------------------

# For speedup, decide which plot_formats to build based on build targets:
#     html only -> png
#     latex only -> pdf
#     all other cases, including html + latex -> png, pdf
# For simplicity, we assume that the build targets appear in the command line.
# We're falling back on using all formats in case that assumption fails.
# formats = {'html': ('png', 100), 'latex': ('pdf', 100)}
# plot_formats = [formats[target] for target in ['html', 'latex']
#                 if target in sys.argv] or list(formats.values())

# numpydoc
# numpydoc_attributes_as_param_list = False
# numpydoc_show_class_members = False 
# numpydoc_class_members_toctree = False


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'pydata_sphinx_theme'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_theme_options = {
    "icon_links": [
        {
            "name": "GitHub",
            "url": "https://github.com/BYUCamachoLab/pyrolab",
            "icon": "fab fa-github-square",
            "type": "fontawesome",
            "attributes": {"target": "_blank"},
        },
        # {
        #     "name": "GitLab",
        #     "url": "https://gitlab.com/<your-org>/<your-repo>",
        #     "icon": "fab fa-gitlab",
        # },
        # {
        #     "name": "Twitter",
        #     "url": "https://twitter.com/<your-handle>",
        #     "icon": "fab fa-twitter-square",
        # },
    ],
    "navigation_with_keys": False,
    # "logo": {
    #     "text": "PyData Theme",
    #     "image_dark": "logo-dark.svg",
    #     "alt_text": "PyData Theme",
    # },
    "use_edit_page_button": True,
    "show_toc_level": 1,
    "navbar_align": "left",  # [left, content, right] For testing that the navbar items align properly
    # "navbar_center": ["version-switcher", "navbar-nav"],
    # "announcement": "https://raw.githubusercontent.com/pydata/pydata-sphinx-theme/main/docs/_templates/custom-template.html",
    "show_nav_level": 1,
    # "navbar_start": ["navbar-logo"],
    # "navbar_end": ["theme-switcher", "navbar-icon-links"],
    # "navbar_persistent": ["search-button"],
    # "primary_sidebar_end": ["custom-template.html", "sidebar-ethical-ads.html"],
    # "footer_items": ["copyright"],
    # "secondary_sidebar_items": ["page-toc.html"],  # Remove the source buttons
    # "switcher": {
    #     "json_url": json_url,
    #     "version_match": version_match,
    # },
    "external_links": [
      {"name": "Changelog", "url": "https://github.com/BYUCamachoLab/pyrolab/releases"},
    ],
}

html_sidebars = {
    "index": [],
}

html_css_files = [
    "css/getting_started.css",
    "css/pyrolab.css",
]

html_context = {
    "github_url": "https://github.com",
    "github_user": "BYUCamachoLab",
    "github_repo": "pyrolab",
    "github_version": "master",
    "doc_path": "docs/",
}

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
# html_favicon = "_static/img/favicon.ico"

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True
